<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="specFlow" type="TechTalk.SpecFlow.Configuration.ConfigurationSectionHandler, TechTalk.SpecFlow" />
  <section name="autofac" type="Autofac.Configuration.SectionHandler, Autofac.Configuration" /></configSections>
  <specFlow>
    <!-- For additional details on SpecFlow configuration options see http://go.specflow.org/doc-config -->
  <unitTestProvider name="Unickq.SpecFlow.Selenium" /><generator allowDebugGeneratedFiles="true" markFeaturesParallelizable="true" /><plugins>
         <add name="Unickq.SpecFlow.Selenium" />
      </plugins><stepAssemblies>
      <!-- This attribute is required in order to use StepArgument Transformation as described here; 
    https://github.com/marcusoftnet/SpecFlow.Assist.Dynamic/wiki/Step-argument-transformations  -->
      <stepAssembly assembly="SpecFlow.Assist.Dynamic" />
    </stepAssemblies><!-- For additional details on SpecFlow configuration options see http://go.specflow.org/doc-config --></specFlow>
<appSettings>
     <add key="base" value="http://www.jobmidia.com.br" />
   </appSettings>
      <autofac>

    <components>
      <component name="Phantom" type="OpenQA.Selenium.PhantomJS.PhantomJSDriver, WebDriver" service="OpenQA.Selenium.IWebDriver, WebDriver" instance-scope="per-dependency">
      </component>

      <component name="IE" type="OpenQA.Selenium.IE.InternetExplorerDriver, WebDriver" service="OpenQA.Selenium.IWebDriver, WebDriver" instance-scope="per-dependency">
      </component>

      <component name="Chrome" type="OpenQA.Selenium.Chrome.ChromeDriver, WebDriver" service="OpenQA.Selenium.IWebDriver, WebDriver" instance-scope="per-dependency">
      </component>

      <component name="Firefox" type="OpenQA.Selenium.Firefox.FirefoxDriver, WebDriver" service="OpenQA.Selenium.IWebDriver, WebDriver" instance-scope="per-dependency">
      </component>

      <component name="Edge" type="OpenQA.Selenium.Edge.EdgeDriver, WebDriver" service="OpenQA.Selenium.IWebDriver, WebDriver" instance-scope="per-dependency">
      </component>
      
      <component name="Opera" type="OpenQA.Selenium.Opera.OperaDriver, WebDriver" service="OpenQA.Selenium.IWebDriver, WebDriver" instance-scope="per-dependency">
      </component>

      <!--RemoteDriver-->
      <component name="ChromeDocker" type="Unickq.SpecFlow.Selenium.WebDriverGrid.RemoteWebDriver, Unickq.SpecFlow.Selenium.SpecFlowPlugin" service="OpenQA.Selenium.IWebDriver, WebDriver" instance-scope="per-dependency">
        <parameters>
          <parameter name="url" value="http://localhost:4444/wd/hub" />
          <parameter name="browser" value="Chrome">
          </parameter>
        </parameters>
      </component>
      <component name="IEDocker" type="Unickq.SpecFlow.Selenium.WebDriverGrid.RemoteWebDriver, Unickq.SpecFlow.Selenium.SpecFlowPlugin" service="OpenQA.Selenium.IWebDriver, WebDriver" instance-scope="per-dependency">
        <parameters>
          <parameter name="url" value="http://localhost:4444/wd/hub" />
          <parameter name="browser" value="InternetExplorer">
          </parameter>
        </parameters>
      </component>
      <component name="PhantomDocker" type="Unickq.SpecFlow.Selenium.WebDriverGrid.RemoteWebDriver, Unickq.SpecFlow.Selenium.SpecFlowPlugin" service="OpenQA.Selenium.IWebDriver, WebDriver" instance-scope="per-dependency">
        <parameters>
          <parameter name="url" value="http://localhost:4444/wd/hub" />
          <parameter name="browser" value="phantomjs">
          </parameter>
        </parameters>
      </component>
      <component name="EdgeDocker" type="Unickq.SpecFlow.Selenium.WebDriverGrid.RemoteWebDriver, Unickq.SpecFlow.Selenium.SpecFlowPlugin" service="OpenQA.Selenium.IWebDriver, WebDriver" instance-scope="per-dependency">
        <parameters>
          <parameter name="url" value="http://localhost:4444/wd/hub" />
          <parameter name="browser" value="Edge">
          </parameter>
        </parameters>
      </component>
      <component name="FirefoxDocker" type="Unickq.SpecFlow.Selenium.WebDriverGrid.RemoteWebDriver, Unickq.SpecFlow.Selenium.SpecFlowPlugin" service="OpenQA.Selenium.IWebDriver, WebDriver" instance-scope="per-dependency">
        <parameters>
          <parameter name="url" value="http://localhost:4444/wd/hub" />
          <parameter name="browser" value="Firefox">
          </parameter>
        </parameters>
      </component>
      <component name="Debug" type="Unickq.SpecFlow.Selenium.Local.ChromeDriver, Unickq.SpecFlow.Selenium.SpecFlowPlugin" service="OpenQA.Selenium.IWebDriver, WebDriver" instance-scope="per-dependency">
        <parameters>
          <parameter name="capabilities">
            <dictionary>
              <item key="arguments" value="--window-size=1900,1050" />
            </dictionary>
          </parameter>
        </parameters>
      </component>
      <component name="DebugIphone" type="Unickq.SpecFlow.Selenium.Local.ChromeDriver, Unickq.SpecFlow.Selenium.SpecFlowPlugin" service="OpenQA.Selenium.IWebDriver, WebDriver" instance-scope="per-dependency">
        <parameters>
          <parameter name="capabilities">
            <dictionary>
              <item key="arguments" value="--window-size=395,687" />
              <item key="mobileEmulation" value="iPhone 6" />
            </dictionary>
          </parameter>
        </parameters>
      </component>
      <component name="DebugIpad" type="Unickq.SpecFlow.Selenium.Local.ChromeDriver, Unickq.SpecFlow.Selenium.SpecFlowPlugin" service="OpenQA.Selenium.IWebDriver, WebDriver" instance-scope="per-dependency">
        <parameters>
          <parameter name="capabilities">
            <dictionary>
              <item key="arguments" value="--window-size=788,1044" />
              <item key="mobileEmulation" value="iPad" />
            </dictionary>
          </parameter>
        </parameters>
      </component>
    </components>
  </autofac>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Autofac" publicKeyToken="17863af14b0044da" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.5.0.0" newVersion="3.5.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="TechTalk.SpecFlow" publicKeyToken="0778194805d6db41" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.3.2.0" newVersion="2.3.2.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>