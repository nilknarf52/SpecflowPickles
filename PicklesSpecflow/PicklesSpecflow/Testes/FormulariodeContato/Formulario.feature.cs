// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace PicklesSpecflow.Testes.FormulariodeContato
{
    using TechTalk.SpecFlow;
    using Autofac;
    using Autofac.Configuration;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Formulario de Contato")]
    [NUnit.Framework.ParallelizableAttribute()]
    public partial class FormularioDeContatoFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private OpenQA.Selenium.IWebDriver driver;
        
        private IContainer container;
        
        [NUnit.Framework.OneTimeSetUp()]
        public virtual void FeatureSetup()
        {
            var builder = new ContainerBuilder();
            builder.RegisterModule(new ConfigurationSettingsReader());
            container = builder.Build();
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt-BR"), "Formulario de Contato", "\tEu como usuário, preciso contactar o prestador de serviço\r\n\tPara que seja necess" +
                    "ário um possível retorno\r\n\tPreciso preencher as informações do formulário corret" +
                    "amente.", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDown()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            try {((Unickq.SpecFlow.Selenium.WebDriverGrid.PaidWebDriver) driver).UpdateTestResult();} catch (System.Exception) {}
            try {System.Threading.Thread.Sleep(50); driver.Quit(); } catch (System.Exception) {}
            driver = null;
            try {testRunner.ScenarioContext.Remove("Driver");} catch (System.NullReferenceException) {}
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            if(driver != null)
              testRunner.ScenarioContext.Add("Driver", driver);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
            testRunner.Given("que eu esteja no site jobmidia", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
            testRunner.And("navego em formulario de contato", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Preenchimento do formulario corretamente")]
        [NUnit.Framework.TestCaseAttribute("EdgeDocker", Category="EdgeDocker", TestName="PreenchimentoDoFormularioCorretamente with EdgeDocker")]
        [NUnit.Framework.TestCaseAttribute("ChromeDocker", Category="ChromeDocker", TestName="PreenchimentoDoFormularioCorretamente with ChromeDocker")]
        [NUnit.Framework.TestCaseAttribute("IEDocker", Category="IEDocker", TestName="PreenchimentoDoFormularioCorretamente with IEDocker")]
        [NUnit.Framework.TestCaseAttribute("PhantomDocker", Category="PhantomDocker", TestName="PreenchimentoDoFormularioCorretamente with PhantomDocker")]
        public virtual void PreenchimentoDoFormularioCorretamente(string browser)
        {
InitializeSeleniumBrowser(browser);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Preenchimento do formulario corretamente", new string[] {
                        "Browser:EdgeDocker",
                        "Browser:ChromeDocker",
                        "Browser:IEDocker",
                        "Browser:PhantomDocker"});
            this.ScenarioSetup(scenarioInfo);
            this.FeatureBackground();
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Nome",
                        "Email",
                        "Telefone",
                        "Mensagem"});
            table1.AddRow(new string[] {
                        "Franklin",
                        "franklinjob@hotmail.com",
                        "(21)991475281",
                        "Teste de Mensagem"});
            testRunner.And("informo todos os dados", ((string)(null)), table1, "E ");
            testRunner.When("envio o formulario", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
            testRunner.Then("recebo a mensagem de sucesso \'Sua mensagem foi enviada com sucesso.\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Preenchimento do formulario com email incorreto")]
        [NUnit.Framework.TestCaseAttribute("FirefoxDocker", Category="FirefoxDocker", TestName="PreenchimentoDoFormularioComEmailIncorreto with FirefoxDocker")]
        [NUnit.Framework.TestCaseAttribute("IE", Category="IE", TestName="PreenchimentoDoFormularioComEmailIncorreto with IE")]
        [NUnit.Framework.TestCaseAttribute("Edge", Category="Edge", TestName="PreenchimentoDoFormularioComEmailIncorreto with Edge")]
        [NUnit.Framework.TestCaseAttribute("Chrome", Category="Chrome", TestName="PreenchimentoDoFormularioComEmailIncorreto with Chrome")]
        public virtual void PreenchimentoDoFormularioComEmailIncorreto(string browser)
        {
InitializeSeleniumBrowser(browser);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Preenchimento do formulario com email incorreto", new string[] {
                        "Browser:FirefoxDocker",
                        "Browser:IE",
                        "Browser:Edge",
                        "Browser:Chrome"});
            this.ScenarioSetup(scenarioInfo);
            this.FeatureBackground();
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Nome",
                        "Email",
                        "Telefone",
                        "Mensagem"});
            table2.AddRow(new string[] {
                        "Franklin",
                        "franklinjob@",
                        "(21)991475281",
                        "Teste de Mensagem"});
            testRunner.But("informo o email incompleto", ((string)(null)), table2, "Mas ");
            testRunner.When("envio o formulario", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
            testRunner.Then("recebo a mensagem de validação do e-mail \'Formato de e-mail inválido\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Preenchimento do formulario sem mensagem")]
        [NUnit.Framework.TestCaseAttribute("Firefox", Category="Firefox", TestName="PreenchimentoDoFormularioSemMensagem with Firefox")]
        [NUnit.Framework.TestCaseAttribute("IE", Category="IE", TestName="PreenchimentoDoFormularioSemMensagem with IE")]
        [NUnit.Framework.TestCaseAttribute("Edge", Category="Edge", TestName="PreenchimentoDoFormularioSemMensagem with Edge")]
        [NUnit.Framework.TestCaseAttribute("Chrome", Category="Chrome", TestName="PreenchimentoDoFormularioSemMensagem with Chrome")]
        [NUnit.Framework.TestCaseAttribute("Phantom", Category="Phantom", TestName="PreenchimentoDoFormularioSemMensagem with Phantom")]
        public virtual void PreenchimentoDoFormularioSemMensagem(string browser)
        {
InitializeSeleniumBrowser(browser);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Preenchimento do formulario sem mensagem", new string[] {
                        "Browser:Firefox",
                        "Browser:IE",
                        "Browser:Edge",
                        "Browser:Chrome",
                        "Browser:Phantom"});
            this.ScenarioSetup(scenarioInfo);
            this.FeatureBackground();
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Nome",
                        "Email",
                        "Telefone",
                        "Mensagem"});
            table3.AddRow(new string[] {
                        "Franklin",
                        "franklinjob@hotmail.com",
                        "(21)991475281",
                        ""});
            testRunner.But("não informo mensagem", ((string)(null)), table3, "Mas ");
            testRunner.When("envio o formulario", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
            testRunner.Then("recebo a mensagem de validação de mensagem \'Por favor informe uma mensagem.\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Preenchimento do formulario telefone incorreto")]
        [NUnit.Framework.TestCaseAttribute("Firefox", Category="Firefox", TestName="PreenchimentoDoFormularioTelefoneIncorreto with Firefox")]
        [NUnit.Framework.TestCaseAttribute("IEDocker", Category="IEDocker", TestName="PreenchimentoDoFormularioTelefoneIncorreto with IEDocker")]
        [NUnit.Framework.TestCaseAttribute("Edge", Category="Edge", TestName="PreenchimentoDoFormularioTelefoneIncorreto with Edge")]
        [NUnit.Framework.TestCaseAttribute("Chrome", Category="Chrome", TestName="PreenchimentoDoFormularioTelefoneIncorreto with Chrome")]
        [NUnit.Framework.TestCaseAttribute("Phantom", Category="Phantom", TestName="PreenchimentoDoFormularioTelefoneIncorreto with Phantom")]
        public virtual void PreenchimentoDoFormularioTelefoneIncorreto(string browser)
        {
InitializeSeleniumBrowser(browser);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Preenchimento do formulario telefone incorreto", new string[] {
                        "Browser:Firefox",
                        "Browser:IEDocker",
                        "Browser:Edge",
                        "Browser:Chrome",
                        "Browser:Phantom"});
            this.ScenarioSetup(scenarioInfo);
            this.FeatureBackground();
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Nome",
                        "Email",
                        "Telefone",
                        "Mensagem"});
            table4.AddRow(new string[] {
                        "Franklin",
                        "franklinjob@hotmail.com",
                        "",
                        "Teste de Mensagem"});
            testRunner.But("não informo telefone", ((string)(null)), table4, "Mas ");
            testRunner.When("envio o formulario", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
            testRunner.Then("recebo a mensagem de validação de telefone \'Por favor informe seu telefone.\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
            this.ScenarioCleanup();
        }
        
        private void InitializeSeleniumBrowser(string browser)
        {
            driver = container.ResolveNamed<OpenQA.Selenium.IWebDriver>(browser);
        }
    }
}
#pragma warning restore
#endregion
